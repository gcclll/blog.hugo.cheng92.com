:PROPERTIES:
:ID:       c1cf80bc-b25e-439f-bdb1-c066c0755398
:END:
#+SETUPFILE:~/.gclrc/org/hugo_setup.org
#+HUGO_SLUG: coding_everything_in_here
#+PROPERTY: header-args :noweb no-export
#+HTML_HEAD: <meta name="category" content="javascript"/>
#+HTML_HEAD: <meta name="tags" content="javascript,web"/>
#+HTML_HEAD: <meta name="createdAt" content="2022-05-10 18:04:21"/>
#+TITLE: Coding Everything In Here
<badge: GCCLL | Homepage | green | / | gnu-emacs | tinder>

#+begin_box Introduce
这里是一些个人代码或网上看到的些优秀的代码记录文。

方便代码可能会用到 ~process.env.HOME~ 之类的环境变量，正常是不需要的，直接
~require('esbuild')~ 就行，使用它们是因为我用的是 Emacs + org-mode 方式写的博客，
为了方便直接能 kbd:C-c_C-c 执行得到结果才使用的。
#+end_box
#+html:<br>

* build & scaffold

** esbuild

[[https://esbuild.github.io/][esbuild - An extremely fast JavaScript bundler]]

[[https://github.com/evanw/esbuild][evanw/esbuild: An extremely fast JavaScript and CSS bundler and minifier]]

#+html: <br>
#+begin_details build typescript file :title-color green
#+begin_src js -n -r
// production -> require('esbuild')
const esbuild = require(process.env.NODE_LIB + '/esbuild');

const path = process.env.HOME + '/github/tools/cta-modal'
const commands = {
  entryPoints: [`${path}/src/assets/ts/cta-modal.ts`],
  target: [
    // Modern browsers.
    'chrome98',
    'edge98',
    'firefox97',
    'safari15',
  ],
  outfile: `${path}/dist/cta-modal.js`,
};

// =============
// Run commands.
// =============

global.console.log('running esbuild…');
esbuild.build(commands);
#+end_src

#+RESULTS:
: running esbuild…
: undefined

构建之后的代码：

#+include: ~/github/tools/cta-modal/dist/cta-modal.js src js
#+end_details
* COMMENT Local Variables       :ARCHIVE:
# Local Variables:
# after-save-hook: gcl/org-html-export-to-html
# End:
